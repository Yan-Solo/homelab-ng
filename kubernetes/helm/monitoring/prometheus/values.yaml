kube-prometheus-stack:
  nameOverride: "prometheus"
  fullNameOverride: "prometheus"
  alertmanager:
    enabled: false
  grafana:
    fullNameOverride: grafana
    defaultDashboardsTimezone: Europe/Brussels
    grafana.ini: 
      provisioning:
        enabled: true
      auth:
        disable_login_form: true
      auth.anonymous:
        enabled: true
        org_name: "Main Org."
        org_role: Admin
      auth.basic:
        enabled: false
      server:
        domain: "grafana.intropin.be"
        root_url: "https://grafana.intropin.be/"
    ingress:
      enabled: true
      annotations:
        nginx.org/websocket-services: "prometheus-grafana"
        cert-manager.io/cluster-issuer: "issuer"
        nginx.ingress.kubernetes.io/auth-method: GET
        nginx.ingress.kubernetes.io/auth-url: http://authelia.core.svc.cluster.local:9091/api/verify
        nginx.ingress.kubernetes.io/auth-signin: https://auth.intropin.be?rm=$request_method
        nginx.ingress.kubernetes.io/auth-response-headers: Remote-User,Remote-Name,Remote-Groups,Remote-Email
        nginx.ingress.kubernetes.io/auth-snippet: |
          proxy_set_header X-Forwarded-Method $request_method;       
      hosts:
        - grafana.intropin.be
      tls:
        - secretName: grafana-letsencrypt-certificate
          hosts:
            - grafana.intropin.be
  prometheus:
    fullNameOverride: prometheus
    prometheusSpec:
      retention: 60d
      retentionSize: "180GB"
      walCompression: true
      replicas: 1
      podMonitorSelectorNilUsesHelmValues: false
      serviceMonitorSelectorNilUsesHelmValues: false
      ruleSelectorNilUsesHelmValues: false
      resources:
        limits:
          memory: 5Gi
        requests:
          cpu: 1500m
          memory: 3.5Gi
      storageSpec:
        emptyDir:
          medium: Memory


    ingress:
      enabled: true
      annotations:
        hajimari.io/group: "Monitoring"
        kubernetes.io/ingress-allow-http: "false"
        kubernetes.io/ingress.class: "nginx"
        nginx.ingress.kubernetes.io/whitelist-source-range: "10.0.0.0/8"
      hosts:
        - prometheus.intropin.be
      tls:
        - secretName: prometheus-letsencrypt-certificate
          hosts:
            - prometheus.intropin.be
  prometheusOperator:
    admissionWebhooks:
      certManager:
        enabled: true
    resources:
      limits:
        cpu: 100m
        memory: 200Mi
      requests:
        cpu: 100m
        memory: 100Mi
  kubeEtcd:
    enabled: true
    endpoints:
    - 192.168.0.31
    service:
      enabled: true
      port: 2381
      targetPort: 2381

  kubeScheduler:
    enabled: true
    endpoints:
    - 192.168.0.31
    service:
      enabled: true
    serviceMonitor:
      enabled: true
      scheme: https
      insecureSkipVerify: true
  
  kubeProxy:
    enabled: true
    endpoints:
    - 192.168.0.31
  
  kubeStateMetrics:
    enabled: true

  defaultRules:
    create: true
    rules:
      alertmanager: true
      etcd: true
      configReloaders: true
      general: true
      k8s: true
      kubeApiserverAvailability: true
      kubeApiserverBurnrate: true
      kubeApiserverHistogram: true
      kubeApiserverSlos: true
      kubelet: true
      kubeProxy: true
      kubePrometheusGeneral: true
      kubePrometheusNodeRecording: true
      kubernetesApps: true
      kubernetesResources: true
      kubernetesStorage: true
      kubernetesSystem: true
      kubeScheduler: true
      kubeStateMetrics: true
      network: true
      node: true
      nodeExporterAlerting: true
      nodeExporterRecording: true
      prometheus: true
      prometheusOperator: true

  kubeApiServer:
    enabled: true
  
  kubelet:
    enabled: true
    serviceMonitor:
      metricRelabelings:
        - action: replace
          sourceLabels:
            - node
          targetLabel: instance
  
  kubeControllerManager:
    enabled: true
    endpoints: 
      - &singelNodeIp 192.168.0.31
  
  coreDns:
    enabled: true
  
  kubeDns:
    enabled: false
  
  kubeEtcd:
    enabled: true
    endpoints: 
      - *singelNodeIp
    service:
      enabled: true
      port: 2381
      targetPort: 2381
  
  kubeScheduler:
    enabled: true
    endpoints: 
      - *singelNodeIp
  
  kubeProxy:
    enabled: true
    endpoints: 
      - *singelNodeIp
  
  kubeStateMetrics:
    enabled: true
  
  kube-state-metrics:
    fullnameOverride: kube-state-metrics
    selfMonitor:
      enabled: true
    prometheus:
      monitor:
        enabled: true
        relabelings:
          - action: replace
            regex: (.*)
            replacement: $1
            sourceLabels:
              - __meta_kubernetes_pod_node_name
            targetLabel: kubernetes_node
  
  nodeExporter:
    enabled: true
    serviceMonitor:
      relabelings:
        - action: replace
          regex: (.*)
          replacement: $1
          sourceLabels:
            - __meta_kubernetes_pod_node_name
          targetLabel: kubernetes_node
  
  prometheus-node-exporter:
    fullnameOverride: node-exporter
    podLabels:
      jobLabel: node-exporter
    extraArgs:
      - --collector.filesystem.mount-points-exclude=^/(dev|proc|sys|var/lib/docker/.+|var/lib/kubelet/.+)($|/)
      - --collector.filesystem.fs-types-exclude=^(autofs|binfmt_misc|bpf|cgroup2?|configfs|debugfs|devpts|devtmpfs|fusectl|hugetlbfs|iso9660|mqueue|nsfs|overlay|proc|procfs|pstore|rpc_pipefs|securityfs|selinuxfs|squashfs|sysfs|tracefs)$
    service:
      portName: http-metrics
    prometheus:
      monitor:
        enabled: true
        relabelings:
          - action: replace
            regex: (.*)
            replacement: $1
            sourceLabels:
              - __meta_kubernetes_pod_node_name
            targetLabel: kubernetes_node
    resources:
      requests:
        memory: 512Mi
        cpu: 250m
      limits:
        memory: 2048Mi
  
  prometheusOperator:
    enabled: true
    prometheusConfigReloader:
      resources:
        requests:
          cpu: 200m
          memory: 50Mi
        limits:
          memory: 100Mi
  
  prometheus:
    enabled: true
    prometheusSpec:
      replicas: 1
      replicaExternalLabelName: "replica"
      ruleSelectorNilUsesHelmValues: false
      serviceMonitorSelectorNilUsesHelmValues: false
      podMonitorSelectorNilUsesHelmValues: false
      probeSelectorNilUsesHelmValues: false
      retention: 6h
      enableAdminAPI: true
      walCompression: true
