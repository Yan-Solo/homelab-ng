kube-prometheus-stack:
  nameOverride: "prometheus"
  fullNameOverride: "prometheus"
  alertmanager:
    enabled: false
  grafana:
    fullNameOverride: grafana
    defaultDashboardsTimezone: Europe/Brussels
    assertNoLeakedSecrets: false
    grafana.ini:
      provisioning:
        enabled: true
      auth:
        disable_login_form: true
      server:
        domain: "grafana.intropin.be"
        root_url: "https://grafana.intropin.be/"
      auth.generic_oauth:
        enabled: true
        name: Authelia
        icon: signin
        client_id: grafana
        client_secret: insecure_secret
        scopes:
          - openid
          - profile
          - groups
        empty_scopes: false
        auth_url: 'https://auth.intropin.be/api/oidc/authorization'
        token_url: 'https://auth.intropin.be/api/oidc/token'
        api_url: 'https://auth.intropin.be/api/oidc/userinfo'
        login_attribute_path: preferred_username
        groups_attribute_path: groups
        name_attribute_path: name
        use_pkce: false
    additionalDataSources:
      - name: loki
        access: proxy
        basicAuth: false
        editable: false
        orgId: 1
        type: loki
        url: http://loki:3100
        version: 1
    ingress:
      enabled: true
      annotations:
        nginx.org/websocket-services: "prometheus-grafana"
        cert-manager.io/cluster-issuer: "issuer"
      hosts:
        - grafana.intropin.be
      tls:
        - secretName: grafana-letsencrypt-certificate
          hosts:
            - grafana.intropin.be
    sidecar:
      dashboards:
        enabled: true
        label: grafana_dashboard
        labelValue: "1"
        searchNamespace: "ALL"
        annotations: {}
        multicluster:
          global:
            enabled: false
          etcd:
            enabled: false
        provider:
          allowUiUpdates: false
  prometheus:
    fullNameOverride: prometheus
    prometheusSpec:
      retention: 60d
      retentionSize: "180GB"
      walCompression: true
      replicas: 1
      podMonitorSelectorNilUsesHelmValues: false
      serviceMonitorSelectorNilUsesHelmValues: false
      ruleSelectorNilUsesHelmValues: false
      resources:
        limits:
          memory: 5Gi
        requests:
          cpu: 1500m
          memory: 3.5Gi
      storageSpec:
        emptyDir:
          medium: Memory
    ingress:
      enabled: true
      annotations:
        hajimari.io/group: "Monitoring"
        kubernetes.io/ingress-allow-http: "false"
        kubernetes.io/ingress.class: "nginx"
        nginx.ingress.kubernetes.io/whitelist-source-range: "10.0.0.0/8"
      hosts:
        - prometheus.intropin.be
      tls:
        - secretName: prometheus-letsencrypt-certificate
          hosts:
            - prometheus.intropin.be
  prometheusOperator:
    admissionWebhooks:
      certManager:
        enabled: true
    resources:
      limits:
        cpu: 100m
        memory: 200Mi
      requests:
        cpu: 100m
        memory: 100Mi
  kubeEtcd:
    enabled: true
    endpoints:
      - 192.168.0.31
    service:
      enabled: true
      port: 2381
      targetPort: 2381
  kubeScheduler:
    enabled: true
    endpoints:
      - 192.168.0.31
    service:
      enabled: true
    serviceMonitor:
      enabled: true
      scheme: https
      insecureSkipVerify: true
  kubeProxy:
    enabled: true
    endpoints:
      - 192.168.0.31
  kubeStateMetrics:
    enabled: true
