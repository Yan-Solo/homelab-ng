argo-cd:
  server:
    replicas: 1
    pdb:
      enabled: true
      minAvailable: 1
    ingress:
      enabled: true
      hosts:
        - &host argocd.intropin.be
      annotations:
        nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
        nginx.org/websocket-services: "argocd-server"
        cert-manager.io/cluster-issuer: "issuer"
      tls:
        - hosts:
            - *host
          secretName: argocd-letsencrypt-certificate

  configs:
    params:
      applicationsetcontroller.policy: "create-only"
    cm:
      admin.enabled: "true"
      url: https://argocd.intropin.be
      exec.enabled: "true"
      resource.compareoptions: |
        ignoreAggregatedRoles: true
        ignoreResourceStatusField: crd
      dex.config: |
        connectors:
        - config:
            issuer: https://authentik.intropin.be/application/o/argocd/
            clientID: v0mi87xDT9cX7GjfBSrxWwGfhJoEHFhcFeintAaX
            clientSecret: $argocd-secret:dex.authentik.clientSecret
            insecureEnableGroups: true
            scopes:
              - openid
              - profile
              - email
              - groups
          name: authentik
          type: oidc
          id: authentik
    secret:
      extra:
        authelia.clientID: "argocd"  
        authelia.clientSecret: "g3B8QGa.4~c9scA2GdWoz.BXgo4cMOW5YgoEX46XqrTBbAhqN~K6-YoZ.YjsBqfLtX1a3Jnw"
        dex.authentik.clientSecret: Y3AwVE0xb2NnN2k2akFXRUVCaU1JamR1TVN6bGp5ZFZtaGdmRVN3cXVhalVNWlg1aUpEQ3dJQk9VNmVNczJYYzl2OHNOUkVqSUpvQXlvVmpvRXlTN1hVUFc5UXF3OTB2Y2pWM2Zjb1FBYUhnaHl2RGoxS0hVcEplSURrdGJZRU0K

    rbac:
      policy.csv: |
        g, argo-admin, role:admin
        g, admins, role:admin
        g, ArgoCD Admins, role:admin

  controller:
    replicas: 1
    pdb:
      enabled: true
      minAvailable: 1

  repoServer:
    replicas: 1

  applicationSet:
    replicaCount: 1

  dex:
    enabled: true
    pdb:
      enabled: true
      minAvailable: 1

  global:
    priorityClassName: system-cluster-critical
