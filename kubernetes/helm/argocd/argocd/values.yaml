argo-cd:
  server:
    replicas: 1
    pdb:
      enabled: true
      minAvailable: 1
    ingress:
      enabled: true
      hosts:
        - &host argocd.intropin.be
      annotations:
        nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
        nginx.org/websocket-services: "argocd-server"
        cert-manager.io/cluster-issuer: "issuer"
      tls:
        - hosts:
            - *host
          secretName: argocd-letsencrypt-certificate

  configs:
    params:
      applicationsetcontroller.policy: "create-only"
    cm:
      admin.enabled: "true"
      url: https://argocd.intropin.be
      exec.enabled: "true"
      resource.compareoptions: |
        ignoreAggregatedRoles: true
        ignoreResourceStatusField: crd
      oidc.config: |
        name: Authelia
        issuer: https://auth.intropin.be
        clientID: $authelia.clientID
        clientSecret: $authelia.clientSecret
        cliClientID: argocd-cli
        requestedScopes:
          - openid
          - profile
          - email
          - groups

    secret:
      extra:
        authelia.clientID: "argocd"  
        authelia.clientSecret: "$pbkdf2-sha512$310000$c8p78n7pUMln0jzvd4aK4Q$JNRBzwAo0ek5qKn50cFzzvE9RXV88h1wJn5KGiHrD0YKtZaR/nCb2CJPOsKaPK0hjf.9yHxzQGZziziccp6Yng"

    rbac:
      policy.csv: |
        g, argo-admin, role:admin
        g, admins, role:admin
        g, ArgoCD Admins, role:admin

  controller:
    replicas: 1
    pdb:
      enabled: true
      minAvailable: 1

  repoServer:
    replicas: 1

  applicationSet:
    replicaCount: 1

  dex:
    enabled: true
    pdb:
      enabled: true
      minAvailable: 1

  global:
    priorityClassName: system-cluster-critical
