---
version: "3"

dotenv:
  - './.env'

tasks:
  hypervisor_init:
    desc: Setup proxmox hypervisor_init
    dir: ./infra/ansible/
    cmds:
      - ansible-playbook setup-hypervisors.yaml

  terraform_vm_init:
    desc: Configure and start up required VMs
    dir: ./infra/terraform/
    cmds:
      - terraform init
      - terraform apply -auto-approve
      - ssh root@192.168.0.30 'qm set 100 -scsi2 /dev/disk/by-id/wwn-0x50026b7381090c52 -scsi3 /dev/disk/by-id/wwn-0x50014ee2be336795'

  terraform_vm_destroy:
    desc: Delete VMs
    dir: ./infra/terraform/
    cmds:
      - terraform destroy -auto-approve

  talos_init:
    desc: Configure talos on the VM
    dir: ./infra/talos/
    cmds:
      - talhelper genconfig
      - talosctl apply-config --insecure --file clusterconfig/echel-master-01.yaml --nodes $(cat ../terraform/script_get_vm_ips/output.txt | jq -r '.[]')
      - echo "Sleeping to let talos get installed" && sleep 180 
      - talosctl --talosconfig clusterconfig/talosconfig config endpoint 192.168.0.31
      - talosctl --talosconfig clusterconfig/talosconfig config node 192.168.0.31
      - talosctl --talosconfig clusterconfig/talosconfig bootstrap 
      - echo "Sleeping to let talos get bootstrapped" ; sleep 120
      - talosctl --talosconfig clusterconfig/talosconfig kubeconfig ~/.kube/config

  argocd_init:
    desc: Install ArgoCD using helm
    dir: ./infra/argocd/
    cmds:
      - helm repo add argo https://argoproj.github.io/argo-helm
      - helm upgrade --install argocd argo/argo-cd --create-namespace --namespace argocd --version 5.33.0 --values argocd-values.yaml --wait
      - kubectl apply -f ../../kubernetes/manifests/argocd-seedjobs/manifest-apps.yaml
      - kubectl -n argocd get secret argocd-initial-admin-secret -o jsonpath="{.data.password}" | base64 -d

  fluxcd_init:
    desc: Install FluxCD and reconcile this repo
    dir: ./
    cmds:
      - flux bootstrap github --owner=$GITHUB_USER --repository=$GITREPO_NAME --branch=main --path=./flux --personal
